# coding: utf-8

"""
    IP RL BSP API

    IP RL BSP API for participation in capacity/energy market tenders.  # noqa: E501

    OpenAPI spec version: 3.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ProductName(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NEG_00_04 = "NEG_00_04"
    NEG_04_08 = "NEG_04_08"
    NEG_08_12 = "NEG_08_12"
    NEG_12_16 = "NEG_12_16"
    NEG_16_20 = "NEG_16_20"
    NEG_20_24 = "NEG_20_24"
    POS_00_04 = "POS_00_04"
    POS_04_08 = "POS_04_08"
    POS_08_12 = "POS_08_12"
    POS_12_16 = "POS_12_16"
    POS_16_20 = "POS_16_20"
    POS_20_24 = "POS_20_24"
    NEGPOS_00_04 = "NEGPOS_00_04"
    NEGPOS_04_08 = "NEGPOS_04_08"
    NEGPOS_08_12 = "NEGPOS_08_12"
    NEGPOS_12_16 = "NEGPOS_12_16"
    NEGPOS_16_20 = "NEGPOS_16_20"
    NEGPOS_20_24 = "NEGPOS_20_24"
    NEGPOS_00_24 = "NEGPOS_00_24"
    NEG_001 = "NEG_001"
    NEG_002 = "NEG_002"
    NEG_003 = "NEG_003"
    NEG_004 = "NEG_004"
    NEG_005 = "NEG_005"
    NEG_006 = "NEG_006"
    NEG_007 = "NEG_007"
    NEG_008 = "NEG_008"
    NEG_009 = "NEG_009"
    NEG_010 = "NEG_010"
    NEG_011 = "NEG_011"
    NEG_012 = "NEG_012"
    NEG_013 = "NEG_013"
    NEG_014 = "NEG_014"
    NEG_015 = "NEG_015"
    NEG_016 = "NEG_016"
    NEG_017 = "NEG_017"
    NEG_018 = "NEG_018"
    NEG_019 = "NEG_019"
    NEG_020 = "NEG_020"
    NEG_021 = "NEG_021"
    NEG_022 = "NEG_022"
    NEG_023 = "NEG_023"
    NEG_024 = "NEG_024"
    NEG_025 = "NEG_025"
    NEG_026 = "NEG_026"
    NEG_027 = "NEG_027"
    NEG_028 = "NEG_028"
    NEG_029 = "NEG_029"
    NEG_030 = "NEG_030"
    NEG_031 = "NEG_031"
    NEG_032 = "NEG_032"
    NEG_033 = "NEG_033"
    NEG_034 = "NEG_034"
    NEG_035 = "NEG_035"
    NEG_036 = "NEG_036"
    NEG_037 = "NEG_037"
    NEG_038 = "NEG_038"
    NEG_039 = "NEG_039"
    NEG_040 = "NEG_040"
    NEG_041 = "NEG_041"
    NEG_042 = "NEG_042"
    NEG_043 = "NEG_043"
    NEG_044 = "NEG_044"
    NEG_045 = "NEG_045"
    NEG_046 = "NEG_046"
    NEG_047 = "NEG_047"
    NEG_048 = "NEG_048"
    NEG_049 = "NEG_049"
    NEG_050 = "NEG_050"
    NEG_051 = "NEG_051"
    NEG_052 = "NEG_052"
    NEG_053 = "NEG_053"
    NEG_054 = "NEG_054"
    NEG_055 = "NEG_055"
    NEG_056 = "NEG_056"
    NEG_057 = "NEG_057"
    NEG_058 = "NEG_058"
    NEG_059 = "NEG_059"
    NEG_060 = "NEG_060"
    NEG_061 = "NEG_061"
    NEG_062 = "NEG_062"
    NEG_063 = "NEG_063"
    NEG_064 = "NEG_064"
    NEG_065 = "NEG_065"
    NEG_066 = "NEG_066"
    NEG_067 = "NEG_067"
    NEG_068 = "NEG_068"
    NEG_069 = "NEG_069"
    NEG_070 = "NEG_070"
    NEG_071 = "NEG_071"
    NEG_072 = "NEG_072"
    NEG_073 = "NEG_073"
    NEG_074 = "NEG_074"
    NEG_075 = "NEG_075"
    NEG_076 = "NEG_076"
    NEG_077 = "NEG_077"
    NEG_078 = "NEG_078"
    NEG_079 = "NEG_079"
    NEG_080 = "NEG_080"
    NEG_081 = "NEG_081"
    NEG_082 = "NEG_082"
    NEG_083 = "NEG_083"
    NEG_084 = "NEG_084"
    NEG_085 = "NEG_085"
    NEG_086 = "NEG_086"
    NEG_087 = "NEG_087"
    NEG_088 = "NEG_088"
    NEG_089 = "NEG_089"
    NEG_090 = "NEG_090"
    NEG_091 = "NEG_091"
    NEG_092 = "NEG_092"
    NEG_093 = "NEG_093"
    NEG_094 = "NEG_094"
    NEG_095 = "NEG_095"
    NEG_096 = "NEG_096"
    NEG_097 = "NEG_097"
    NEG_098 = "NEG_098"
    NEG_099 = "NEG_099"
    NEG_100 = "NEG_100"
    POS_001 = "POS_001"
    POS_002 = "POS_002"
    POS_003 = "POS_003"
    POS_004 = "POS_004"
    POS_005 = "POS_005"
    POS_006 = "POS_006"
    POS_007 = "POS_007"
    POS_008 = "POS_008"
    POS_009 = "POS_009"
    POS_010 = "POS_010"
    POS_011 = "POS_011"
    POS_012 = "POS_012"
    POS_013 = "POS_013"
    POS_014 = "POS_014"
    POS_015 = "POS_015"
    POS_016 = "POS_016"
    POS_017 = "POS_017"
    POS_018 = "POS_018"
    POS_019 = "POS_019"
    POS_020 = "POS_020"
    POS_021 = "POS_021"
    POS_022 = "POS_022"
    POS_023 = "POS_023"
    POS_024 = "POS_024"
    POS_025 = "POS_025"
    POS_026 = "POS_026"
    POS_027 = "POS_027"
    POS_028 = "POS_028"
    POS_029 = "POS_029"
    POS_030 = "POS_030"
    POS_031 = "POS_031"
    POS_032 = "POS_032"
    POS_033 = "POS_033"
    POS_034 = "POS_034"
    POS_035 = "POS_035"
    POS_036 = "POS_036"
    POS_037 = "POS_037"
    POS_038 = "POS_038"
    POS_039 = "POS_039"
    POS_040 = "POS_040"
    POS_041 = "POS_041"
    POS_042 = "POS_042"
    POS_043 = "POS_043"
    POS_044 = "POS_044"
    POS_045 = "POS_045"
    POS_046 = "POS_046"
    POS_047 = "POS_047"
    POS_048 = "POS_048"
    POS_049 = "POS_049"
    POS_050 = "POS_050"
    POS_051 = "POS_051"
    POS_052 = "POS_052"
    POS_053 = "POS_053"
    POS_054 = "POS_054"
    POS_055 = "POS_055"
    POS_056 = "POS_056"
    POS_057 = "POS_057"
    POS_058 = "POS_058"
    POS_059 = "POS_059"
    POS_060 = "POS_060"
    POS_061 = "POS_061"
    POS_062 = "POS_062"
    POS_063 = "POS_063"
    POS_064 = "POS_064"
    POS_065 = "POS_065"
    POS_066 = "POS_066"
    POS_067 = "POS_067"
    POS_068 = "POS_068"
    POS_069 = "POS_069"
    POS_070 = "POS_070"
    POS_071 = "POS_071"
    POS_072 = "POS_072"
    POS_073 = "POS_073"
    POS_074 = "POS_074"
    POS_075 = "POS_075"
    POS_076 = "POS_076"
    POS_077 = "POS_077"
    POS_078 = "POS_078"
    POS_079 = "POS_079"
    POS_080 = "POS_080"
    POS_081 = "POS_081"
    POS_082 = "POS_082"
    POS_083 = "POS_083"
    POS_084 = "POS_084"
    POS_085 = "POS_085"
    POS_086 = "POS_086"
    POS_087 = "POS_087"
    POS_088 = "POS_088"
    POS_089 = "POS_089"
    POS_090 = "POS_090"
    POS_091 = "POS_091"
    POS_092 = "POS_092"
    POS_093 = "POS_093"
    POS_094 = "POS_094"
    POS_095 = "POS_095"
    POS_096 = "POS_096"
    POS_097 = "POS_097"
    POS_098 = "POS_098"
    POS_099 = "POS_099"
    POS_100 = "POS_100"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """ProductName - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProductName, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProductName):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
